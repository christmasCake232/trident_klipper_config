
[gcode_macro BED_MESH_CALIBRATE]
description : modified BED_MESH_CALIBRATE, wrapped with DEPLOY_PROBE/STOW_PROBE
rename_existing : _UNSAFE_BED_MESH_CALIBRATE
gcode :
    {% set adaptive = params.ADAPTIVE | default(0) %}
    M401
    _UNSAFE_BED_MESH_CALIBRATE ADAPTIVE={adaptive}
    M402


[gcode_macro  PRINTER_STANDBY]
description : disable everything
gcode :
    TURN_OFF_HEATERS
    M107 # fans
    M84  # steppers


# call from slicer printer start gcode; for example, with PrusaSlicer:
#   START_PRINT EXTRUDER_TEMP=[first_layer_temperature] BED_TEMP=[first_layer_bed_temperature] FILAMENT_TYPE=[filament_type]
[gcode_macro START_PRINT]
gcode :
    {% set extruder_temp = params.EXTRUDER_TEMP | default(printer.extruder.target, true) %}
    {% set bed_temp      = params.BED_TEMP      | default(printer.heater_bed.target, true) %}
    {% set chamber_temp  = params.CHAMBER_TEMP  | default(40) | float %}

    ## reset various states to configured or safe defaults
    ;CLEAR_PAUSE

    # Reset speed and extrusion rates, in case they were manually changed
    M220 S100
    M221 S100

    G21   ; Metric values
    G90   ; Absolute positioning
    M82   ; Set extruder to absolute mode

    M118  Heating bed({ bed_temp }C)
    M190 S{ bed_temp }

    M118 heating chamber and bed to {chamber_temp}

    M118 Tramming...
    _TRAM_PRINTER

    # Wait for extruder to heat up
    M109 S{ extruder_temp }


    M118 Purging...
    ADAPTIVE_PURGE

    M83     ; relative distances for extrusion
    G92 E0  ; reset extrusion

    M118 Printing....
    # SET_FILAMENT_SENSOR SENSOR=filament_encoder ENABLE=0
    M220 S80 ; TODO


[gcode_macro PRINT_END]
#   Use PRINT_END for the slicer ending script - please customise for your slicer of choice
gcode :
    M400                           ; wait for buffer to clear
    G92 E0                         ; zero the extruder
    G1 E-10.0 F3600                ; retract filament
    G91                            ; relative positioning
    G0 Z1.00 X20.0 Y20.0 F20000    ; move nozzle to remove stringing
    TURN_OFF_HEATERS
    M107                           ; turn off fan
    G1 Z2 F3000                    ; move nozzle up 2mm
    G90                            ; absolute positioning
    G0  X125 Y250 F3600            ; park nozzle at rear
    M84                            ; steppers off
    BED_MESH_CLEAR
    CHAMBER_EXHAUST_ON DURATION=30
    AUTOCYCLE_HEATER_BED

    SET_VELOCITY_LIMIT ACCEL=8000
    SET_VELOCITY_LIMIT SQUARE_CORNER_VELOCITY=5


[gcode_macro _HOME_X]
gcode :
    # Always use consistent run_current on A/B steppers during sensorless homing
    {% set RUN_CURRENT_X = printer.configfile.settings['tmc5160 stepper_x'].run_current | float %}
    {% set RUN_CURRENT_Y = printer.configfile.settings['tmc5160 stepper_y'].run_current | float %}
    {% set HOME_CURRENT = 0.7 %}
    SET_TMC_CURRENT STEPPER=stepper_x CURRENT={HOME_CURRENT}
    SET_TMC_CURRENT STEPPER=stepper_y CURRENT={HOME_CURRENT}

    # Home
    G28 X
    # Move away
    G91
    G1 X-10 F1200

    # Wait just a second… (give StallGuard registers time to clear)
    G4 P1000
    # Set current during print
    SET_TMC_CURRENT STEPPER=stepper_x CURRENT={RUN_CURRENT_X}
    SET_TMC_CURRENT STEPPER=stepper_y CURRENT={RUN_CURRENT_Y}

[gcode_macro _HOME_Y]
gcode :
    # Set current for sensorless homing
    {% set RUN_CURRENT_X = printer.configfile.settings['tmc5160 stepper_x'].run_current | float %}
    {% set RUN_CURRENT_Y = printer.configfile.settings['tmc5160 stepper_y'].run_current | float %}
    {% set HOME_CURRENT = 0.7 %}
    SET_TMC_CURRENT STEPPER=stepper_x CURRENT={HOME_CURRENT}
    SET_TMC_CURRENT STEPPER=stepper_y CURRENT={HOME_CURRENT}

    # Home
    G28 Y
    # Move away
    G91
    G1 Y-10 F1200

    # Wait just a second… (give StallGuard registers time to clear)
    G4 P1000
    # Set current during print
    SET_TMC_CURRENT STEPPER=stepper_x CURRENT={RUN_CURRENT_X}
    SET_TMC_CURRENT STEPPER=stepper_y CURRENT={RUN_CURRENT_Y}

[gcode_macro _HOME_Z_DISABLE_M401]
gcode :
    SET_GCODE_VARIABLE MACRO=_HOME_Z VARIABLE=disable_m401 VALUE=1

[gcode_macro _HOME_Z_DISABLE_M402]
gcode :
    SET_GCODE_VARIABLE MACRO=_HOME_Z VARIABLE=disable_m402 VALUE=1

[gcode_macro _HOME_Z_DISABLE_Z_TILT_ADJUST]
gcode :
    SET_GCODE_VARIABLE MACRO=_HOME_Z VARIABLE=disable_z_tilt_adjust VALUE=1

[gcode_macro _HOME_Z]
variable_disable_m401: 0
variable_disable_m402: 0
variable_disable_z_tilt_adjust: 0
gcode :
    {% set disable_m401          = printer["gcode_macro _HOME_Z"].disable_m401          | int %}
    {% set disable_m402          = printer["gcode_macro _HOME_Z"].disable_m402          | int %}
    {% set disable_z_tilt_adjust = printer["gcode_macro _HOME_Z"].disable_z_tilt_adjust | int %}
    
    SET_GCODE_VARIABLE MACRO=_HOME_Z VARIABLE=disable_m401          VALUE=0
    SET_GCODE_VARIABLE MACRO=_HOME_Z VARIABLE=disable_m402          VALUE=0
    SET_GCODE_VARIABLE MACRO=_HOME_Z VARIABLE=disable_z_tilt_adjust VALUE=0
    
    G90                        ; Absolute positioning
    SET_KINEMATIC_POSITION Z=0
    G0 Z15 F500                ; raise bed to 15
    
    {% if disable_m401 != 1 %}
        M401                   ; deploy Euclid Probe
    {% endif %}
    
    G0 X150 Y150 F18000        ; move to X150 Y150 ; not needed?
    G28 Z                      ; home Z
    {% if disable_z_tilt_adjust != 1 %}
        _UNSAFE_Z_TILT_ADJUST
        G0 X150 Y150 F18000    ; move to X150 Y150 ; not needed?
        G28 Z                  ; home Z
    {% endif %}
    

    G0 Z15 F500                ; raise bed to 15
    
    {% if disable_m402 != 1 %}
        M402                   ; retract Euclid Probe
    {% endif %}

    

[homing_override]
axes : xyz
gcode :
    {% set home_all = 'X' not in params and 'Y' not in params and 'Z' not in params %}
    
    {% if home_all or 'X' in params %}
        _HOME_X
    {% endif %}

    {% if home_all or 'Y' in params %}
        _HOME_Y
    {% endif %}

    {% if home_all or 'Z' in params %}
        _HOME_Z
    {% endif %}


[gcode_macro _TRAM_PRINTER]
description : G28 XYZ, Z_TILT_ADJUST, UNSAFE_BED_MESH_CALIBRATE, wrapped with DEPLOY_PROBE/STOW_PROBE
gcode :
    M118 Tramming printer
    M118 Homing XY
    G28 X
    G28 Y
    
    ;M401
    
    M118 Homing Y and Z tilt adjust
    _HOME_Z_DISABLE_M402
    G28 Z
    
    M118 Bed mesh calibrate
    _UNSAFE_BED_MESH_CALIBRATE ADAPTIVE=1

    M402
    

[gcode_macro Z_TILT_ADJUST]
description : modified Z_TILT_ADJUST, wrapped with DEPLOY_PROBE/STOW_PROBE
rename_existing : _UNSAFE_Z_TILT_ADJUST
gcode :
    M401
    _UNSAFE_Z_TILT_ADJUST
    M402

[gcode_macro M600]
description : TODO
gcode :
    {% set X = params.X | default(50) | float %}
    {% set Y = params.Y |  default(0) | float %}
    {% set Z = params.Z | default(10) | float %}
    SAVE_GCODE_STATE NAME=M600_state
    PAUSE
    G91
    G1 E-.8 F2700
    G1 Z{Z}
    G90
    G1 X{X} Y{Y} F3000
    G91
    G1 E-50 F1000
    RESTORE_GCODE_STATE NAME=M600_state

