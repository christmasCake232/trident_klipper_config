[gcode_macro _UNSAFE_BED_MESH_CALIBRATE]
gcode :
    SET_GCODE_VARIABLE MACRO=BED_MESH_CALIBRATE VARIABLE=probe_dock_enable VALUE=False
    BED_MESH_CALIBRATE
    SET_GCODE_VARIABLE MACRO=BED_MESH_CALIBRATE VARIABLE=probe_dock_enable VALUE=True

[gcode_macro TURN_OFF_LIGHTS]
description : disable all lights
gcode :
# chamber lights
    SET_CHAMBER_LIGHTS TARGET=0.0

[gcode_macro  PRINTER_READY]
description : TODO
gcode :
# chamber lights
    SET_CHAMBER_LIGHTS TARGET=1.0 DURATION=300


[gcode_macro  PRINTER_STANDBY]
description : disable everything
gcode :
    TURN_OFF_HEATERS
    M107 # fans
    M84  # steppers
    TURN_OFF_LIGHTS

# call from slicer printer start gcode; for example, with PrusaSlicer:
#   START_PRINT EXTRUDER_TEMP=[first_layer_temperature] BED_TEMP=[first_layer_bed_temperature] FILAMENT_TYPE=[filament_type]
[gcode_macro START_PRINT]
gcode :
    {% set extruder_temp = params.EXTRUDER_TEMP | default(printer.extruder.target, true) %}
    {% set bed_temp      = params.BED_TEMP      | default(printer.heater_bed.target, true) %}
    {% set chamber_temp  = params.CHAMBER_TEMP  | default(40) | float %}

    M117 FOOBAR HERE
    PRINTER_READY
    SET_CHAMBER_LIGHTS TARGET=1.0

## reset various states to configured or safe defaults
;CLEAR_PAUSE

# Reset speed and extrusion rates, in case they were manually changed
    M220 S100
    M221 S100

    G21   ; Metric values
    G90   ; Absolute positioning
    M82   ; Set extruder to absolute mode

    M117  Heating bed({ bed_temp }C)
    M190 S{ bed_temp }

    M117 heating chamber and bed to {chamber_temp}

    M117 Tramming...
    _TRAM_PRINTER

# Wait for extruder to heat up
    M109 S{ extruder_temp }


    M117 Purging...
    ADAPTIVE_PURGE

    M83     ; relative distances for extrusion
    G92 E0  ; reset extrusion

    M117 Printing....
    SET_CHAMBER_LIGHTS TARGET=1.0 DURATION=600

[gcode_macro PRINT_END]
#   Use PRINT_END for the slicer ending script - please customise for your slicer of choice
gcode :
    M400                           ; wait for buffer to clear
    G92 E0                         ; zero the extruder
    G1 E-10.0 F3600                ; retract filament
    G91                            ; relative positioning
    G0 Z1.00 X20.0 Y20.0 F20000    ; move nozzle to remove stringing
    TURN_OFF_HEATERS
    M107                           ; turn off fan
    G1 Z2 F3000                    ; move nozzle up 2mm
    G90                            ; absolute positioning
    G0  X125 Y250 F3600            ; park nozzle at rear
    M84                            ; steppers off
    BED_MESH_CLEAR
    SET_CHAMBER_LIGHTS TARGET=1.0 DURATION=600
    AUTOCYCLE_HEATER_BED


[gcode_macro _HOME_X]
gcode :
# Always use consistent run_current on A/B steppers during sensorless homing
    {% set RUN_CURRENT_X = printer.configfile.settings['tmc5160 stepper_x'].run_current|float %}
    {% set RUN_CURRENT_Y = printer.configfile.settings['tmc5160 stepper_y'].run_current|float %}
    {% set HOME_CURRENT = 0.7 %}
    SET_TMC_CURRENT STEPPER=stepper_x CURRENT={HOME_CURRENT}
    SET_TMC_CURRENT STEPPER=stepper_y CURRENT={HOME_CURRENT}

# Home
    G28 X
# Move away
    G91
    G1 X-10 F1200

# Wait just a second… (give StallGuard registers time to clear)
    G4 P1000
# Set current during print
    SET_TMC_CURRENT STEPPER=stepper_x CURRENT={RUN_CURRENT_X}
    SET_TMC_CURRENT STEPPER=stepper_y CURRENT={RUN_CURRENT_Y}

[gcode_macro _HOME_Y]
gcode :
# Set current for sensorless homing
    {% set RUN_CURRENT_X = printer.configfile.settings['tmc5160 stepper_x'].run_current|float %}
    {% set RUN_CURRENT_Y = printer.configfile.settings['tmc5160 stepper_y'].run_current|float %}
    {% set HOME_CURRENT = 0.7 %}
    SET_TMC_CURRENT STEPPER=stepper_x CURRENT={HOME_CURRENT}
    SET_TMC_CURRENT STEPPER=stepper_y CURRENT={HOME_CURRENT}

# Home
    G28 Y
# Move away
    G91
    G1 Y-10 F1200

# Wait just a second… (give StallGuard registers time to clear)
    G4 P1000
# Set current during print
    SET_TMC_CURRENT STEPPER=stepper_x CURRENT={RUN_CURRENT_X}
    SET_TMC_CURRENT STEPPER=stepper_y CURRENT={RUN_CURRENT_Y}


[homing_override]
axes : xyz
set_position_z : -5 # TODO: what is this?
gcode :
    G90                    ; Absolute positioning
    SET_KINEMATIC_POSITION Z=0
    G0 Z15 F500           ; raise bed to 15

    {% if not 'x' in printer.toolhead.homed_axes %}
    _HOME_X
    {% endif %}

    {% if not 'y' in printer.toolhead.homed_axes %}
    _HOME_Y
    {% endif %}

    M401                  ; deploy Euclid Probe

    G0 X150 Y150 F6000    ; move to X150 Y150 ; not needed?

    G28 Z                 ; home Z
    _UNSAFE_Z_TILT_ADJUST

    G0 X150 Y150 F6000    ; move to X150 Y150 ; not needed?
    G28 Z                 ; home Z

    G0 Z15 F500           ; raise bed to 15

    M402                  ; retract Euclid Probe

[gcode_macro _TRAM_PRINTER]
description : G28 XYZ, Z_TILT_ADJUST, UNSAFE_BED_MESH_CALIBRATE, wrapped with DEPLOY_PROBE/STOW_PROBE
gcode :
    G28
    M401 # TODO
    _UNSAFE_BED_MESH_CALIBRATE
    M402 # TODO

[gcode_macro Z_TILT_ADJUST]
description : modified Z_TILT_ADJUST, wrapped with DEPLOY_PROBE/STOW_PROBE
rename_existing : _UNSAFE_Z_TILT_ADJUST
gcode :
    M401
    _UNSAFE_Z_TILT_ADJUST
    M402

[gcode_macro M600]
description : TODO
gcode :
    {% set X = params.X|default(50)|float %}
    {% set Y = params.Y|default(0)|float %}
    {% set Z = params.Z|default(10)|float %}
    SAVE_GCODE_STATE NAME=M600_state
    PAUSE
    G91
    G1 E-.8 F2700
    G1 Z{Z}
    G90
    G1 X{X} Y{Y} F3000
    G91
    G1 E-50 F1000
    RESTORE_GCODE_STATE NAME=M600_state


[delayed_gcode _printer_init]
initial_duration : 1.0
gcode :
    PRINTER_READY
